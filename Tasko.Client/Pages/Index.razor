@page "/"
@using Tasko.Client.Helpers;
@inject NavigationManager Navigation
@inject AuthStateProvider AuthStateProvider

<AuthorizeView>
    <Authorized Context="Auth">
        <span>Авторизован</span>
    </Authorized>
    <NotAuthorized Context="Login">

        <div class="login-page">

            <div class="login-leftpanel">
                <div class="login-leftpanel-content">
                    <h2>Добро пожаловать в Tasko!</h2>
                    <p>Для продолжения, войдите в свою учетную запись Tasko</p>

                    <EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="alert alert-danger" hidden="@loginModel.LoginFailureHidden">
                            Invalid login attempt, please correct and try again.
                        </div>
                        <div class="form-group">
                            <label>Email или Телефон</label>
                            <InputText id="email" @bind-Value="loginModel.Username" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Пароль</label>
                            <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" />
                        </div>
                        <div class="d-flex mt-3">
                            <button type="submit" class="btn btn-primary">Войти</button>
                            <button type="submit" class="btn btn-secondary ml-3">Создать аккаунт</button>
                        </div>
                    </EditForm>
                </div>
            </div>

            <div class="login-rightpanel">
                <img src="/assets/images/login_background.svg" />
                <div class="login-rightpanel-content">
                    <h4>Что такое Task’o?</h4>
                    <p>Task’o - это локальная программа для управления проектами как небольших организационных групп, так и огромных предприятий.</p>
                </div>
            </div>

        </div>


    </NotAuthorized>
</AuthorizeView>


@code {
    private LoginViewModel loginModel = new();

    private async Task HandleValidSubmit()
    {

        var successful = loginModel.ValidateLogin(out string jwtToken);

        //Not successful, don't need to do anything
        if (!successful)
            return;

        //Call login and recirect
        await AuthStateProvider.Login(jwtToken);
        Navigation.NavigateTo("/counter"); //Root URL
    }
}